version: '2.2'

volumes:
  middle_var: {}
  historical_var: {}
  broker_var: {}
  coordinator_var: {}
  router_var: {}
  postgres: {}
  druid_data: {}

services:
  postgres:
    container_name: grafadruid-postgres
    image: postgres:latest
    user: root
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=FoolishPassword
      - POSTGRES_USER=druid
      - POSTGRES_DB=druid
    restart: always
  zookeeper:
    container_name: zookeeper
    image: zookeeper:3.6
    environment:
      - ZOO_MY_ID=1
  coordinator:
    image: apache/druid:0.20.0
    container_name: grafadruid-coordinator
    user: root
    volumes:
      - druid_data:/opt/data
      - coordinator_var:/opt/druid/var
      - ./druid/properties:/properties
    depends_on:
      - zookeeper
      - postgres
    ports:
      - '8081:8081'
    command:
      - coordinator
    env_file:
      - ./druid/environment
    restart: always
  broker:
    image: apache/druid:0.20.0
    container_name: grafadruid-broker
    user: root
    volumes:
      - broker_var:/opt/druid/var
      - ./druid/properties:/properties
    depends_on:
      - zookeeper
      - postgres
      - coordinator
    ports:
      - '8082:8082'
    command:
      - broker
    env_file:
      - ./druid/environment
    restart: always
  historical:
    image: apache/druid:0.20.0
    container_name: grafadruid-historical
    user: root
    volumes:
      - druid_data:/opt/data
      - historical_var:/opt/druid/var
      - ./druid/properties:/properties
    depends_on:
      - zookeeper
      - postgres
      - coordinator
    ports:
      - '8083:8083'
    command:
      - historical
    env_file:
      - ./druid/environment
    restart: always
  middlemanager:
    image: apache/druid:0.20.0
    container_name: grafadruid-middlemanager
    user: root
    volumes:
      - druid_data:/opt/data
      - middle_var:/opt/druid/var
      - ./druid/properties:/properties
    depends_on:
      - zookeeper
      - postgres
      - coordinator
    ports:
      - '8091:8091'
    command:
      - middleManager
    env_file:
      - ./druid/environment
    restart: always
  router:
    image: apache/druid:0.20.0
    container_name: grafadruid-router
    user: root
    volumes:
      - router_var:/opt/druid/var
      - ./druid/properties:/properties
    depends_on:
      - zookeeper
      - postgres
      - coordinator
    ports:
      - '8888:8888'
    command:
      - router
    env_file:
      - ./druid/environment
    restart: always

  grafana:
    image: grafana/grafana:7.4.0
    container_name: grafadruid-grafana
    user: root
    volumes:
      - ../dist:/var/lib/grafana/plugins/druid-grafana
      - ./grafana/dashboards:/etc/grafana/dashboards
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - broker
    ports:
      - '3000:3000'
    env_file:
      - ./grafana/environment
    restart: always

  toolbox:
    container_name: grafadruid-toolbox
    depends_on:
      - coordinator
    build:
      dockerfile: ./toolbox/Dockerfile
      context: .
    volumes:
      - ../:/workspace
    restart: always

---
version: '3.8'

services:
  broker:
    command:
      - broker
    depends_on:
      - zookeeper
      - postgres
      - coordinator
    env_file:
      - ./druid/environment
    image: apache/druid:${DRUID_VERSION}
    ports:
      - 8082:8082
    restart: on-failure
    user: root
    volumes:
      - broker_var:/opt/druid/var
      - ./druid/properties:/properties

  coordinator:
    command:
      - coordinator
    depends_on:
      - zookeeper
      - postgres
    env_file:
      - ./druid/environment
    image: apache/druid:${DRUID_VERSION}
    ports:
      - 8081:8081
    restart: on-failure
    user: root
    volumes:
      - druid_data:/opt/data
      - coordinator_var:/opt/druid/var
      - ./druid/properties:/properties

  grafana:
    depends_on:
      - broker
    env_file:
      - ./grafana/environment
    image: grafana/grafana:${GRAFANA_VERSION}
    ports:
      - 3000:3000
    restart: on-failure
    user: root
    volumes:
      - ../dist:/var/lib/grafana/plugins/druid-grafana
      - ./grafana/dashboards:/etc/grafana/dashboards
      - ./grafana/provisioning:/etc/grafana/provisioning

  historical:
    command:
      - historical
    depends_on:
      - zookeeper
      - postgres
      - coordinator
    env_file:
      - ./druid/environment
    image: apache/druid:${DRUID_VERSION}
    ports:
      - 8083:8083
    restart: on-failure
    user: root
    volumes:
      - druid_data:/opt/data
      - historical_var:/opt/druid/var
      - ./druid/properties:/properties

  middlemanager:
    command:
      - middleManager
    depends_on:
      - zookeeper
      - postgres
      - coordinator
    env_file:
      - ./druid/environment
    image: apache/druid:${DRUID_VERSION}
    ports:
      - 8091:8091
    restart: on-failure
    user: root
    volumes:
      - druid_data:/opt/data
      - middle_var:/opt/druid/var
      - ./druid/properties:/properties

  postgres:
    environment:
      POSTGRES_DB: druid
      POSTGRES_PASSWORD: FoolishPassword
      POSTGRES_USER: druid
    image: postgres:${POSTGRES_VERSION}
    restart: on-failure
    user: root
    volumes:
      - postgres:/var/lib/postgresql/data

  router:
    command:
      - router
    depends_on:
      - zookeeper
      - postgres
      - coordinator
    env_file:
      - ./druid/environment
    image: apache/druid:${DRUID_VERSION}
    ports:
      - 8888:8888
    restart: on-failure
    user: root
    volumes:
      - router_var:/opt/druid/var
      - ./druid/properties:/properties

  toolbox:
    build:
      context: .
      dockerfile: ./toolbox/Dockerfile
    depends_on:
      - coordinator
    restart: on-failure
    volumes:
      - ../:/workspace

  zookeeper:
    environment:
      ZOO_MY_ID: 1
    image: zookeeper:${ZOOKEEPER_VERSION}

volumes:
  broker_var: ~
  coordinator_var: ~
  druid_data: ~
  historical_var: ~
  middle_var: ~
  postgres: ~
  router_var: ~
